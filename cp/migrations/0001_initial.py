# Generated by Django 3.0.7 on 2020-06-13 18:21

from django.db import migrations, models
import django.db.models.deletion
import markdownx.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AntwortenModel',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
                ('slug', models.SlugField()),
                ('text', markdownx.models.MarkdownxField()),
                ('richtig', models.BooleanField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='CharacterModel',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('ingame_id', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='FragenModel',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
                ('slug', models.SlugField()),
                ('text', markdownx.models.MarkdownxField()),
                ('time_to_answer', models.IntegerField(default=30)),
            ],
        ),
        migrations.CreateModel(
            name='RightsModel',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
                ('slug', models.SlugField()),
            ],
        ),
        migrations.CreateModel(
            name='RolesModel',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
                ('slug', models.SlugField()),
            ],
        ),
        migrations.CreateModel(
            name='UserModel',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
                ('slug', models.SlugField()),
                ('socialclub_id', models.CharField(max_length=50)),
                ('email', models.EmailField(max_length=254)),
                ('password', models.CharField(max_length=100)),
                ('discord_name', models.CharField(max_length=100)),
                ('account_id', models.IntegerField()),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now_add=True)),
                ('verified_date', models.DateTimeField()),
                ('verified', models.BooleanField()),
                ('verify_sent', models.DateTimeField()),
                ('verify_token', models.CharField(max_length=100)),
                ('password_reset', models.DateTimeField()),
                ('password_reset_token', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='UserRolesModel',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cp.RolesModel')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cp.UserModel')),
            ],
        ),
        migrations.CreateModel(
            name='UserNotesModel',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
                ('slug', models.SlugField()),
                ('content', markdownx.models.MarkdownxField()),
                ('private', models.BooleanField(default=False)),
                ('admin', models.BooleanField(default=False)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(default=0, on_delete=django.db.models.deletion.SET_DEFAULT, related_name='creator', to='cp.UserModel')),
                ('updated_by', models.ForeignKey(default=0, on_delete=django.db.models.deletion.SET_DEFAULT, related_name='updater', to='cp.UserModel')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='owner', to='cp.UserModel')),
            ],
        ),
        migrations.CreateModel(
            name='UserCharacterModel',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('char', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cp.CharacterModel')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cp.UserModel')),
            ],
        ),
        migrations.CreateModel(
            name='UserBanModel',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now_add=True)),
                ('reason', models.TextField()),
                ('until', models.DateTimeField()),
                ('parole', models.BooleanField(default=False)),
                ('parole_requested', models.BooleanField(default=False)),
                ('parole_granted', models.BooleanField(default=False)),
                ('parole_until', models.DateTimeField()),
                ('created_by', models.ForeignKey(default=0, on_delete=django.db.models.deletion.SET_DEFAULT, related_name='banning_user', to='cp.UserModel')),
                ('parole_granted_by', models.ForeignKey(default=0, on_delete=django.db.models.deletion.SET_DEFAULT, related_name='paroler', to='cp.UserModel')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='banned_user', to='cp.UserModel')),
            ],
        ),
        migrations.CreateModel(
            name='RoleRightsModel',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('right', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cp.RightsModel')),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cp.RolesModel')),
            ],
        ),
        migrations.CreateModel(
            name='FragebogenModel',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('answered_on', models.DateTimeField()),
                ('application_text', models.TextField()),
                ('processed_by', models.ForeignKey(default=0, on_delete=django.db.models.deletion.SET_DEFAULT, related_name='processing_user', to='cp.UserModel')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user', to='cp.UserModel')),
            ],
        ),
        migrations.CreateModel(
            name='FragebogenFragenModel',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('richtig', models.BooleanField(default=False)),
                ('antwort', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='cp.AntwortenModel')),
                ('bogen', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cp.FragebogenModel')),
                ('frage', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='cp.FragenModel')),
            ],
        ),
        migrations.AddField(
            model_name='antwortenmodel',
            name='frage',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cp.FragenModel'),
        ),
    ]
